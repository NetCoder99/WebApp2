@model  WebApp2.Models.Account.LoginCreds
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Ajax.BeginForm("Login", "Account", null,
    new AjaxOptions { HttpMethod = "POST", OnBegin= "OnBegin", OnComplete= "OnComplete",  OnFailure = "OnFailure(xhr, status)" },
    new { id = "myform" }))
{
    @Html.AntiForgeryToken()
    <br />
    <div class="container">
        <div class="logo mb-3">
            <div class="col-md-12 text-center">
                <h1>Login for the Database Migrator</h1>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3"></div>
            <div class="col-md-6 center-block">
                <div class="form ">
                    <div class="form-group col-xs-12">
                        <label for="exampleInputEmail1">Email address</label>
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control small_inp_box lgreen" })
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger static_error display_block", @id = "UserNameError" })
                    </div>
                    <div class="form-group col-xs-12">
                        <label for="exampleInputEmail1">Password</label>
                        @Html.PasswordFor(m => m.PassWord, new { @class = "form-control small_inp_box lgreen" })
                        @Html.ValidationMessageFor(m => m.PassWord, "", new { @class = "text-danger static_error", @id= "PassWordError" })
                    </div>
                    <div class="form-group col-xs-6 text-center ">
                        <button id="btn_submit" type="submit" class=" btn btn-block mybtn btn-primary tx-tfm">Login</button>
                    </div>
                    <div class="form-group col-xs-12">
                        <p><span>Don't have account?</span> @Html.ActionLink("Sign up here", "CreateAccount", "Account")</p>
                    </div>
                    <div class="form-group col-xs-12">
                        <p>By signing up you accept our <a href="#">Terms Of Use</a></p>
                    </div>
                </div>
            </div>
            <div class="col-md-3"></div>
        </div>
    </div>
}

@section scripts{
    <script>
        $(document).ready(function () {
            console.log("ready to rock and roll....");
            $(".small_inp_box:first").focus();
            $("input:password").addClass("lgreen");
            $("input:password").addClass("form-control");
        });

        function OnBegin() {
            $(".small_inp_box").prop("disabled", true);
            $("input:password").prop("disabled", true);
            $("#btn_submit").prop("disabled", true);
        }

        function OnComplete(redirectUrl) {
            console.log(redirectUrl);
            $(".small_inp_box").prop("disabled", false);
            $("input:password").prop("disabled", false);
            $("#btn_submit").prop("disabled", false);
            if (redirectUrl) { window.location.href = redirectUrl.responseJSON.url;}
        }

        function OnFailure(xhr, status) {
            console.log("OnFailure");

            console.log(xhr.status);
            console.log(xhr.responseJSON.param1 + ":"  + xhr.responseJSON.param2);

            if (xhr.responseJSON.param1 == "UserName") {
                $("#UserNameError").text(xhr.responseJSON.param2);
                $("#UserName").removeClass("lgreen");
                $("#UserName").addClass("lred");
            }
            if (xhr.responseJSON.param1 == "PassWord") {
                $("#PassWordError").text(xhr.responseJSON.param2);
                $("#PassWord").removeClass("lgreen");
                $("#PassWord").addClass("lred");
            }

            $(".small_inp_box:first").focus();
            $(".small_inp_box").prop("disabled", false);
            $("#btn_submit").prop("disabled", false);
            $("#btn_submit").text("Login");

        }

        $("input:password").focusout(function () {
            console.log("checking for invalids");
            var err_msg = "";
            var fv = $('#myform').validate();
            if (!$(this).valid()) {
                $(this).removeClass("lgreen");
                $(this).addClass("lred");
                console.log("invalid!");
                var currentElement = this;
                setTimeout(function () {
                    let error = fv.errorList.filter(function (e) { return e.element == currentElement; })[0];
                    err_msg = error.message;
                    console.log(error.message);
                });
            }
            else {
                $(this).addClass("lgreen");
                $(this).removeClass("lred");
                console.log("valid!");
            }
        });

        $(".small_inp_box").focusout(function () {
            console.log("checking for invalids");
            var err_msg = "";
            var fv = $('#myform').validate();
            if (!$(this).valid()) {
                $(this).removeClass("lgreen");
                $(this).addClass("lred");
                console.log("invalid!");
                var currentElement = this;
                setTimeout(function () {
                    let error = fv.errorList.filter(function (e) { return e.element == currentElement; })[0];
                    err_msg = error.message;
                    console.log(error.message);
                });
            }
            else {
                $(this).addClass("lgreen");
                $(this).removeClass("lred");
                console.log("valid!");
            }
        });

    </script>
}
